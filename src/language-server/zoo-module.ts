import {
    createDefaultModule, createDefaultSharedModule, DefaultSharedModuleContext, inject,
    LangiumServices, LangiumSharedServices, Module, PartialLangiumServices
} from 'langium';
import { ZooGeneratedModule, ZooGeneratedSharedModule } from './generated/module';
import { ZooValidator, registerValidationChecks } from './zoo-validator';

/**
 * Declaration of custom services - add your own service classes here.
 */
export type ZooAddedServices = {
    validation: {
        ZooValidator: ZooValidator
    }
}

/**
 * Union of Langium default services and your custom services - use this as constructor parameter
 * of custom service classes.
 */
export type ZooServices = LangiumServices & ZooAddedServices

/**
 * Dependency injection module that overrides Langium default services and contributes the
 * declared custom services. The Langium defaults can be partially specified to override only
 * selected services, while the custom services must be fully specified.
 */
export const ZooModule: Module<ZooServices, PartialLangiumServices & ZooAddedServices> = {
    validation: {
        ZooValidator: () => new ZooValidator()
    }
};

/**
 * Create the full set of services required by Langium.
 *
 * First inject the shared services by merging two modules:
 *  - Langium default shared services
 *  - Services generated by langium-cli
 *
 * Then inject the language-specific services by merging three modules:
 *  - Langium default language-specific services
 *  - Services generated by langium-cli
 *  - Services specified in this file
 *
 * @param context Optional module context with the LSP connection
 * @returns An object wrapping the shared services and the language-specific services
 */
export function createZooServices(context: DefaultSharedModuleContext): {
    shared: LangiumSharedServices,
    Zoo: ZooServices
} {
    const shared = inject(
        createDefaultSharedModule(context),
        ZooGeneratedSharedModule
    );
    const Zoo = inject(
        createDefaultModule({ shared }),
        ZooGeneratedModule,
        ZooModule
    );
    shared.ServiceRegistry.register(Zoo);
    registerValidationChecks(Zoo);
    return { shared, Zoo };
}
